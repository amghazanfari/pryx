name: Docker Publish

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/pryx

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version/tag meta
        id: meta
        run: |
          REF="${GITHUB_REF}"
          SHA_SHORT="$(git rev-parse --short HEAD)"
          echo "sha_tag=sha-${SHA_SHORT}" >> "$GITHUB_OUTPUT"
          if [[ "${REF}" == refs/heads/main ]]; then
            echo "latest=latest" >> "$GITHUB_OUTPUT"
          fi
          if [[ "${REF}" == refs/tags/v* ]]; then
            echo "version_tag=${REF#refs/tags/}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
            ${{ steps.meta.outputs.latest && format('{0}:{1}', env.IMAGE_NAME, steps.meta.outputs.latest) || '' }}
            ${{ steps.meta.outputs.version_tag && format('{0}:{1}', env.IMAGE_NAME, steps.meta.outputs.version_tag) || '' }}
          cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
